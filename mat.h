#pragma once

#include <array>

namespace Matrix {
const float A[8][3] =
    {{1, 0, -0.25},
     {0, 1,  0.3246},
     {1, 0,  0.25},
     {0, 1,  0.3246},
     {1, 0, -0.25},
     {0, 1, -0.3246},
     {1, 0,  0.25},
     {0, 1, -0.3246}};

std::array<float, 8> mult(float B[3]) {
    std::array<float, 8> C =
    {(A[0][0] * B[0]) + (A[0][1] * B[1]) + (A[0][2] * B[2]),
     (A[1][0] * B[0]) + (A[1][1] * B[1]) + (A[1][2] * B[2]),
     (A[2][0] * B[0]) + (A[2][1] * B[1]) + (A[2][2] * B[2]),
     (A[3][0] * B[0]) + (A[3][1] * B[1]) + (A[3][2] * B[2]),
     (A[4][0] * B[0]) + (A[4][1] * B[1]) + (A[4][2] * B[2]),
     (A[5][0] * B[0]) + (A[5][1] * B[1]) + (A[5][2] * B[2]),
     (A[6][0] * B[0]) + (A[6][1] * B[1]) + (A[6][2] * B[2]),
     (A[7][0] * B[0]) + (A[7][1] * B[1]) + (A[7][2] * B[2])};

    return C;
}
}